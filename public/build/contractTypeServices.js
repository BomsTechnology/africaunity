var s=(u,l,a)=>new Promise((e,i)=>{var T=r=>{try{p(a.next(r))}catch(t){i(t)}},v=r=>{try{p(a.throw(r))}catch(t){i(t)}},p=r=>r.done?e(r.value):Promise.resolve(r.value).then(T,v);p((a=a.apply(u,l)).next())});import{r as y,p as c}from"./app.js";function g(){const u=y([]),l=y([]),a=y(""),e=y(0);return{contractTypes:u,contractType:l,errorsCT:a,loading:e,getContractTypes:()=>s(this,null,function*(){a.value="",e.value=!0;let t=yield c.get("/api/contractTypes",{headers:{Authorization:`Bearer ${localStorage.token}`}});u.value=t.data.data,e.value=!1}),getContractType:t=>s(this,null,function*(){a.value="",e.value=!0;let o=yield c.get("/api/contractTypes/"+t,{headers:{Authorization:`Bearer ${localStorage.token}`}});e.value=0,l.value=o.data.data}),createContractType:t=>s(this,null,function*(){a.value="";try{e.value=!0,yield c.post("/api/contractTypes",t,{headers:{Authorization:`Bearer ${localStorage.token}`}}),e.value=!1}catch(o){if(o.response.status==422){e.value=0;for(const n in o.response.data.errorsCT)a.value+=o.response.data.errorsCT[n][0]+`
`}}}),updateContractType:(t,o)=>s(this,null,function*(){a.value="";try{e.value=!0,yield c.put("/api/contractTypes/"+t,o,{headers:{Authorization:`Bearer ${localStorage.token}`}}),e.value=!1}catch(n){if(e.value=0,n.response.status==422)for(const d in n.response.data.errorsCT)a.value+=n.response.data.errorsCT[d][0]+`	
`}}),destroyContractType:t=>s(this,null,function*(){a.value="";try{return e.value=!0,yield c.delete("/api/contractTypes/"+t,{headers:{Authorization:`Bearer ${localStorage.token}`}}),e.value=!1,!0}catch(o){e.value=0,a.value="Impossible de supprimer ce contractType"}})}}export{g as u};
